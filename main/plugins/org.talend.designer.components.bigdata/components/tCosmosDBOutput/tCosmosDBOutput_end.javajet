<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
        java.util.List
        java.util.Map
	"
%>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	String dataAction = ElementParameterParser.getValue(node,"__DATA_ACTION__");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
    String connectionName = ElementParameterParser.getValue(node,"__CONNECTION__");

	// BulkWrite 
	// Last write if number of rows added is less than bulksize
	boolean bulkWrite = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__SET_BULK_WRITE__"));
	boolean bulkWriteType = "Ordered".equalsIgnoreCase(ElementParameterParser.getValue(node, "__BULK_WRITE_TYPE__"));

	String dbversion = ElementParameterParser.getValue(node, "__DB_VERSION__");
    if ("true".equalsIgnoreCase(useExistingConn)) {
        List< ? extends INode> nodes =  node.getProcess().getNodesOfType("tMongoDBConnection");
        for (INode ne : nodes) {
            if (connectionName.equals(ne.getUniqueName())) {
                dbversion = ElementParameterParser.getValue(ne, "__DB_VERSION__");
                break;
            }
        }
    }

	
	List<Map<String, String>> mappings = (List<Map<String,String>>)ElementParameterParser.getObjectValueXML(node, "__MAPPING__");
	
	boolean upsert_with_set = "UPSERT_WITH_SET".equalsIgnoreCase(dataAction);
	boolean updateOnlyColumnExists = false;
	if(upsert_with_set) {
		for (java.util.Map<String, String> mapping: mappings) {
			boolean updatable = true;
			boolean insertable = true;
			
			if(updatable && !insertable) {
				updateOnlyColumnExists = true;
				break;
			}
		}
	}

	if(bulkWrite) {
		if(dbversion.equals("MONGODB_4_4_X") && updateOnlyColumnExists) {%>
			if (bulkWriteOperationCounterForUpdateOnlyColumn_<%=cid%> != 1) {
				coll_<%=cid%>.bulkWrite(bulkWriteOperationForUpdateOnlyColumn_<%=cid%>, new com.mongodb.client.model.BulkWriteOptions().ordered(<%=bulkWriteType%>));
			}
			<%
		}%>
		// if bulkWriteOperationCounter_<%=cid%> == 1 the ulkWriteOperation_<%=cid%> is empty, do not execute.
		if (bulkWriteOperationCounter_<%=cid%> != 1) {
			<%if(dbversion.equals("MONGODB_4_4_X")) {%>
				coll_<%=cid%>.bulkWrite(bulkWriteOperation_<%=cid%>, new com.mongodb.client.model.BulkWriteOptions().ordered(<%=bulkWriteType%>));
				<%
			} else {%>
				bulkWriteOperation_<%=cid%>.execute();
				<%
			}%>
		}
		<%
	}

	if(isLog4jEnabled) {%>
		log.info("<%=cid%> - Has been <%=dataAction.toLowerCase()+(dataAction.endsWith("E")?"d":"ed")%> " + nb_line_<%=cid%> + " records.");
		<%
	}
	if(!"true".equals(useExistingConn)) {%>
		if(mongo_<%=cid%> != null) {
			<%if(isLog4jEnabled) {
				if (dbversion.equals("MONGODB_4_4_X")) {%>
					for (com.mongodb.connection.ServerDescription description : mongo_<%=cid%>.getClusterDescription().getServerDescriptions()) {
						log.info("<%=cid%> - Closing the connection " + description.getAddress());
					}
					<%
				} else { %>
					log.info("<%=cid%> - Closing the connection " + mongo_<%=cid%>.getServerAddressList() + ".");
					<%
				}
			}%>
				mongo_<%=cid%>.close();
			<%if(isLog4jEnabled) {%>
				log.info("<%=cid%> - The connection was closed successfully.");
				<%
			}%>
		}
		resourceMap.put("finish_<%=cid%>", true); 
		<%
	}%>
	globalMap.put("<%=cid %>_NB_LINE", nb_line_<%=cid%>);
